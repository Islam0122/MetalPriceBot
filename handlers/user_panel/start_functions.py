from aiogram import F, types, Router, Bot
from aiogram.enums import ParseMode, ChatMemberStatus
from aiogram.filters import CommandStart, Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder
from sqlalchemy.ext.asyncio import AsyncSession
from filter.chat_types import ChatTypeFilter
from keyboard.inline import *

start_functions_private_router = Router()
start_functions_private_router.message.filter(ChatTypeFilter(['private']))

# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
welcome_text = (
    "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ MetalPriceBot! üéâ\n\n"
    "–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –±—ã—Å—Ç—Ä–æ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –º–µ—Ç–∞–ª–ª–æ–ø—Ä–æ–∫–∞—Ç–∞. üí∞\n\n"
    "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –æ–ø—Ü–∏–π –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å. üîΩ"
)


@start_functions_private_router.message(CommandStart())
async def start_cmd(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    await message.answer_photo(
        photo=types.FSInputFile('media/img.png'),
        caption=welcome_text,
        reply_markup=start_functions_keyboard()
    )


@start_functions_private_router.callback_query(F.data == "start")
async def start_main_menu(query: types.CallbackQuery, ):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback_query –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
    await query.message.edit_caption(
        caption=welcome_text,
        reply_markup=start_functions_keyboard())


@start_functions_private_router.callback_query(F.data == "start_")
async def start_main_menu(query: types.CallbackQuery, ):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback_query –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
    await query.message.delete()
    await query.message.answer_photo(
        photo=types.FSInputFile('media/img.png'),
        caption=welcome_text,
        reply_markup=start_functions_keyboard()
    )


@start_functions_private_router.callback_query(F.data == "about_us")
async def about_us(query: types.CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback_query –¥–ª—è –∫–Ω–æ–ø–∫–∏ '–û –Ω–∞—Å'"""
    await query.message.edit_caption(
        caption="–ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ç–µ–∫—Å—Ç –æ –Ω–∞—Å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏ –∏–ª–∏ –ø—Ä–æ–µ–∫—Ç–∞, "
                "–∫–æ—Ç–æ—Ä–æ–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –≤ —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ.",
        reply_markup=return_menu_functions_keyboard()
    )


@start_functions_private_router.message(Command("about_us"))
async def about_us_message(query: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ 'about_us'"""
    await query.reply(
        text="–ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ç–µ–∫—Å—Ç –æ –Ω–∞—Å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏ –∏–ª–∏ –ø—Ä–æ–µ–∫—Ç–∞, "
                "–∫–æ—Ç–æ—Ä–æ–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –≤ —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ.",
        reply_markup=return2_menu_functions_keyboard()
    )


@start_functions_private_router.callback_query(F.data == "about_bot")
async def about_bot(query: types.CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback_query –¥–ª—è –∫–Ω–æ–ø–∫–∏ '–û –±–æ—Ç–µ'"""
    await query.message.edit_caption(
        caption=(
            "<b>–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –±—ã—Å—Ç—Ä–æ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –º–µ—Ç–∞–ª–ª–æ–ø—Ä–æ–∫–∞—Ç–∞.</b>\n"
            "–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∑–∞–ø—Ä–æ—Å —Å –Ω—É–∂–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏, –∏ —è –Ω–∞–π–¥—É –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –≤–∞—Å. "
            "–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ä–∞–∑–ª–∏—á–Ω—ã–µ –≤–∏–¥—ã –º–µ—Ç–∞–ª–ª–æ–ø—Ä–æ–∫–∞—Ç–∞, –∏ —è —É—á–∏—Ç—ã–≤–∞—é –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã: —Ä–∞–∑–º–µ—Ä, –º–∞—Ä–∫–∞, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏ –≤–µ—Å. "
            "–õ–µ–≥–∫–æ –∏ —É–¥–æ–±–Ω–æ! ü§ñüí¨\n\n"

            "<b>–í–æ—Ç —á—Ç–æ —è –º–æ–≥—É:</b>\n"
            "‚Ä¢ <b>–û –±–æ—Ç–µ ü§ñ</b> - –£–∑–Ω–∞–π—Ç–µ –±–æ–ª—å—à–µ –æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–µ –±–æ—Ç–∞\n"
            "‚Ä¢ <b>–§—É–Ω–∫—Ü–∏–∏ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ üî¢</b> - –û—Ç–∫—Ä–æ–π—Ç–µ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏\n"
            "‚Ä¢ <b>–°–∞–π—Ç—ã –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ üåê</b> - –ü–µ—Ä–µ–π–¥–∏—Ç–µ –∫ —Å–∞–π—Ç–∞–º –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏\n"
            "‚Ä¢ <b>–ò—Å—Ç–æ—Ä–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ üìú</b> - –ü—Ä–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –∏—Å—Ç–æ—Ä–∏—é –≤–∞—à–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤"
        ),
        reply_markup=return_menu_functions_keyboard()
    )


@start_functions_private_router.message(Command("about_bot"))
async def about_bot_message(query: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ '–û –±–æ—Ç–µ'"""
    await query.reply(
        text=(
            "<b>–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –±—ã—Å—Ç—Ä–æ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –º–µ—Ç–∞–ª–ª–æ–ø—Ä–æ–∫–∞—Ç–∞.</b>\n"
            "–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∑–∞–ø—Ä–æ—Å —Å –Ω—É–∂–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏, –∏ —è –Ω–∞–π–¥—É –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –≤–∞—Å. "
            "–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ä–∞–∑–ª–∏—á–Ω—ã–µ –≤–∏–¥—ã –º–µ—Ç–∞–ª–ª–æ–ø—Ä–æ–∫–∞—Ç–∞, –∏ —è —É—á–∏—Ç—ã–≤–∞—é –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã: —Ä–∞–∑–º–µ—Ä, –º–∞—Ä–∫–∞, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏ –≤–µ—Å. "
            "–õ–µ–≥–∫–æ –∏ —É–¥–æ–±–Ω–æ! ü§ñüí¨\n\n"

            "<b>–í–æ—Ç —á—Ç–æ —è –º–æ–≥—É:</b>\n"
            "‚Ä¢ <b>–û –±–æ—Ç–µ ü§ñ</b> - –£–∑–Ω–∞–π—Ç–µ –±–æ–ª—å—à–µ –æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–µ –±–æ—Ç–∞\n"
            "‚Ä¢ <b>–§—É–Ω–∫—Ü–∏–∏ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ üî¢</b> - –û—Ç–∫—Ä–æ–π—Ç–µ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏\n"
            "‚Ä¢ <b>–°–∞–π—Ç—ã –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ üåê</b> - –ü–µ—Ä–µ–π–¥–∏—Ç–µ –∫ —Å–∞–π—Ç–∞–º –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏\n"
            "‚Ä¢ <b>–ò—Å—Ç–æ—Ä–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ üìú</b> - –ü—Ä–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –∏—Å—Ç–æ—Ä–∏—é –≤–∞—à–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤"
        ),
        reply_markup=return2_menu_functions_keyboard()
    )


@start_functions_private_router.callback_query(F.data == "calculator_functions")
async def calculator_functions(query: types.CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback_query –¥–ª—è –∫–Ω–æ–ø–∫–∏ '–§—É–Ω–∫—Ü–∏–∏ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞'"""
    await query.message.edit_caption(
        caption=(
            "<b>üî¢ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –º–µ—Ç–∞–ª–ª–æ–ø—Ä–æ–∫–∞—Ç–∞</b>\n\n"
            "–≠—Ç–æ—Ç –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –±—ã—Å—Ç—Ä–æ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –º–µ—Ç–∞–ª–ª–æ–ø—Ä–æ–∫–∞—Ç–∞ –ø–æ —Ä–∞–∑–ª–∏—á–Ω—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º, —Ç–∞–∫–∏–º –∫–∞–∫:\n\n"
            "‚Ä¢ –ú–∞—Ä–∫–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–∞\n"
            "‚Ä¢ –†–∞–∑–º–µ—Ä\n"
            "‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ\n"
            "‚Ä¢ –í–µ—Å\n\n"
            "–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –≤ —Ñ–æ—Ä–º–∞—Ç–µ: <b>'–ê—Ä–º–∞—Ç—É—Ä–∞ –ê500–° - 1200 –º–µ—Ç—Ä–æ–≤'</b>, –∏ —è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞—Å—Å—á–∏—Ç–∞—é —Å—Ç–æ–∏–º–æ—Å—Ç—å!\n\n"
            "<b>üí° –ü—Ä–∏–º–µ—Ä –∑–∞–ø—Ä–æ—Å–∞:</b>\n"
            "‚Ä¢ '–ê—Ä–º–∞—Ç—É—Ä–∞ –ê500–° - 1200 –º–µ—Ç—Ä–æ–≤'\n"
            "‚Ä¢ '–õ–∏—Å—Ç AISI 304 1250x2500 - 79 —à—Ç—É–∫'\n\n"
            "–Ø –ø–æ–º–æ–≥—É –≤–∞–º –ø–æ–ª—É—á–∏—Ç—å —Ç–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –º–µ—Ç–∞–ª–ª–æ–ø—Ä–æ–∫–∞—Ç–∞ –∑–∞ —Å—á–∏—Ç–∞–Ω–Ω—ã–µ —Å–µ–∫—É–Ω–¥—ã! üìäüìè"
        ),
        reply_markup=return_menu_functions_keyboard()
    )


@start_functions_private_router.message(Command("calculator_functions"))
async def about_bot_message(query: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ '–û –±–æ—Ç–µ'"""
    await query.reply(
        text=(
             "<b>üî¢ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –º–µ—Ç–∞–ª–ª–æ–ø—Ä–æ–∫–∞—Ç–∞</b>\n\n"
            "–≠—Ç–æ—Ç –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –±—ã—Å—Ç—Ä–æ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –º–µ—Ç–∞–ª–ª–æ–ø—Ä–æ–∫–∞—Ç–∞ –ø–æ —Ä–∞–∑–ª–∏—á–Ω—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º, "
             "—Ç–∞–∫–∏–º –∫–∞–∫:\n\n"
            "‚Ä¢ –ú–∞—Ä–∫–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–∞\n"
            "‚Ä¢ –†–∞–∑–º–µ—Ä\n"
            "‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ\n"
            "‚Ä¢ –í–µ—Å\n\n"
            "–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –≤ —Ñ–æ—Ä–º–∞—Ç–µ: <b>'–ê—Ä–º–∞—Ç—É—Ä–∞ –ê500–° - 1200 –º–µ—Ç—Ä–æ–≤'</b>, –∏ —è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞—Å—Å—á–∏—Ç–∞—é —Å—Ç–æ–∏–º–æ—Å—Ç—å!\n\n"
            "<b>üí° –ü—Ä–∏–º–µ—Ä –∑–∞–ø—Ä–æ—Å–∞:</b>\n"
            "‚Ä¢ '–ê—Ä–º–∞—Ç—É—Ä–∞ –ê500–° - 1200 –º–µ—Ç—Ä–æ–≤'\n"
            "‚Ä¢ '–õ–∏—Å—Ç AISI 304 1250x2500 - 79 —à—Ç—É–∫'\n\n"
            "–Ø –ø–æ–º–æ–≥—É –≤–∞–º –ø–æ–ª—É—á–∏—Ç—å —Ç–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –º–µ—Ç–∞–ª–ª–æ–ø—Ä–æ–∫–∞—Ç–∞ –∑–∞ —Å—á–∏—Ç–∞–Ω–Ω—ã–µ —Å–µ–∫—É–Ω–¥—ã! üìäüìè"
        ),
        reply_markup=return2_menu_functions_keyboard()
    )


@start_functions_private_router.callback_query(F.data == "suppliers_sites")
async def suppliers_sites(query: types.CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback_query –¥–ª—è –∫–Ω–æ–ø–∫–∏ '–°–∞–π—Ç—ã –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤'"""
    builder = InlineKeyboardBuilder()
    builder.add(
        InlineKeyboardButton(text="mc.ru", url="https://mc.ru/?ysclid=m5c9i3mvn0111482028"),
        InlineKeyboardButton(text="23met.ru", url="https://23met.ru/?ysclid=m5c9igtota69342984"),
        InlineKeyboardButton(text="galakmet.ru", url="https://www.galakmet.ru/?ysclid=m5c9it5q6x228282705"),
        InlineKeyboardButton(text="alros.ru", url="https://alros.ru/?ysclid=m5c9j3nyrv161303270"),
        InlineKeyboardButton(text="intormetall.ru", url="https://intormetall.ru/?ysclid=m5c9jgiq2v838272831"),
        InlineKeyboardButton(text="evraz.market", url="https://evraz.market/?ysclid=m5c9jqd3hl498235972"),
        InlineKeyboardButton(text="mkm-metal.ru", url="https://mkm-metal.ru/"),
        InlineKeyboardButton(text="donalum.ru", url="https://donalum.ru/?ysclid=m5c9kimjcq580328169"),
    )
    builder.add(InlineKeyboardButton(text="üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="start"))
    await query.message.edit_caption(
        caption="–í–æ—Ç —Å–ø–∏—Å–æ–∫ —Å–∞–π—Ç–æ–≤ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤: üåç",
        reply_markup=builder.adjust(1).as_markup()
    )


@start_functions_private_router.callback_query(F.data == "history")
async def history(query: types.CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback_query –¥–ª—è –∫–Ω–æ–ø–∫–∏ '–ò—Å—Ç–æ—Ä–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤'"""
    history_text = "–ò—Å—Ç–æ—Ä–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ –±—É–¥–µ—Ç –∑–¥–µ—Å—å. –ü–æ–∫–∞ —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã."
    await query.message.edit_caption(
        caption=history_text,
        reply_markup=return_menu_functions_keyboard()
    )


@start_functions_private_router.callback_query(F.data == "contact_us")
async def contact_us(query: types.CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback_query –¥–ª—è –∫–Ω–æ–ø–∫–∏ '–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏'"""
    keyboard = InlineKeyboardBuilder()
    keyboard.add(
        InlineKeyboardButton(text="üìß Email", url="https://t.me/duishobaevislam01"),
        InlineKeyboardButton(text="üì± WhatsApp", url="https://t.me/duishobaevislam01"),
        InlineKeyboardButton(text="üí¨ Telegram", url="https://t.me/duishobaevislam01"),
        InlineKeyboardButton(text="üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="start")
    )
    await query.message.edit_caption(
        caption="–í—ã –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏ —á–µ—Ä–µ–∑: \nüìß Email, \nüì± WhatsApp \nüí¨ Telegram",
        reply_markup=keyboard.adjust(1).as_markup()
    )


@start_functions_private_router.message(Command("contact_us"))
async def contact_us_message(query: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ 'contact_us'"""
    keyboard = InlineKeyboardBuilder()
    keyboard.add(
        InlineKeyboardButton(text="üìß Email", url="https://t.me/duishobaevislam01"),
        InlineKeyboardButton(text="üì± WhatsApp", url="https://t.me/duishobaevislam01"),
        InlineKeyboardButton(text="üí¨ Telegram", url="https://t.me/duishobaevislam01"),
        InlineKeyboardButton(text="üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="start_")
    )
    await query.reply(
        text="–í—ã –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏ —á–µ—Ä–µ–∑: \nüìß Email, \nüì± WhatsApp \nüí¨ Telegram",
        reply_markup=keyboard.adjust(1).as_markup()
    )

